variables:
  SCRIPT_DIR: ".ci/scripts"

stages:

- stage: CodeQualityChecks
  jobs:
  - job: Lint_Code
    displayName: Lint Code
    steps:
    - bash: yarn
    - bash: yarn lint

  - job: Test_Code
    displayName: Test Code
    steps:
    - bash: yarn
    - bash: yarn test


- stage: SecurityChecks
  condition: >
    or(
      eq(variables['Build.SourceBranch'], 'refs/heads/master'), 
      and(
        startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), 
        not(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/experimental'))
      ),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/fix/'), 
      startsWith(variables['Build.SourceBranch'], 'refs/heads/cleanup/')
    )
  jobs:
  - job: Code_Analysis
    displayName: Static Source Code Analysis (nodejsscan)
    steps:
    - bash: ./$(SCRIPT_DIR)/ssca.sh
  - job: Dep_Audit
    displayName: Audit Dependencies (yarn audit)
    steps:
    - bash: ./$(SCRIPT_DIR)/audit.sh
  - job: Key_check
    displayName: Check for any committed keys (gitleaks)
    steps:
    - bash: ./$(SCRIPT_DIR)/check-leaks.sh

- stage: Build
  jobs: BuildItNow
  steps:
    - bash: yarn
    - bash: yarn build